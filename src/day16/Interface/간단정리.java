package day16.Interface;

public class 간단정리 {

/*
    객체 :
            -물리적으로 존재 하거나 개념적으로 존재하는 것 중에 식별이 가능 한 것
            -필드(=저장)/메소드(=행위) 를 구성

    클래스:
            -객체를 만들기 위한 설계도
            - 1. 라이브러리 클래스 2. 실행클래스(main 메소드)
            -멤버(필드, 생성자, 메소드) 설계
            -상속 : 필드/메소드를 물려받는 것
                    목적 :
                            1. 빠른 개발 / 유지보수
                            2. 다형성(타입변환 + 유지보수)
                                - 다형성을 많이 쓰다 보니 부모 메소드를 안쓰고 자식 메소드 들이 재정의 하는 경우가 생김.
                                  (클래스들의 연관성이 커져서)

            -추상(abstract)클래스(목적 = 통합)   // 소규모 프로젝트에서는 많이 사용 하지 않는다.
                        -서로다른 여러개 클래스들의 공통적인 필드/메소드 추출
                        -객체 생성 불가능
                        1.선언방법 : abstract 클래스명{ }
                        2.추상메소드 : 메소드의 선언부만 작성하고 구현부는 자식 클래스가 만든다.
                                1.추상 클래스 에서 만 만들수 있다.
                                2.abstract 반환타입 메소드명();    ---------> 주의!!! 중괄호 없음...!!

    인스턴스
            - 클래스를 이용한 객체를 실제 구현 한 것.


    인스턴스화
            - 인스턴스 만드는 작업 ( =new )

*/




}
