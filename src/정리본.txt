p.34
    -변수 : 하나의 값을 저장할 수 있는 메모리 번저에 붙어진 이름.
    -변수의 선언
        1. 타입
            -기본 자료형 8 개 가 존재
                -사용하는 이유 : 목적에 맞지 않는 타입 사용으로 인한 버그를 사전에 제거하기 위해.
            -정수형 타입
                byte, short, int, long
            -실수형 타입
                float, double
            -불리언 타입
                boolean
            -문자 타입 vs 문자열
                char
        2. 이름
            -첫글자가 소문자인 카멜표기법 사용 , 숫자시작, 공백, 띄어쓰기 안됌!!!!,  일부 특수문자만 가능
            -사용하는 이유 : 메모리 주소값 대신 메모리 위치를 식별하기 위해 문자로 표현
                -(컴퓨터는 저장시 메모리 주소값[16진수] = 사람이 알기 어렵다.)
        3. 대입
            =
        4. 초기값

    -변수 선언 종류
        1. 타입 변수명                   [아직 메모리 할당 x  -> 호출 불가능]
        2. 타입 변수명 = 초기값           [*메모리 할당 o]
========================================================================================================================
진수
    2진수 : 0 또는 1 <----> 이진코드 <----> 기계어
    8진수 : 0 1 2 3 4 5 6 7
    10진수: 0 1 2 3 4 5 6 7 8 9
    16진수: 0 1 2 3 4 5 6 7 8 9 A(10) B(11) C(12) D(13) E(14) F(15)




8가지 기본 자료형 [*암기]
    [정수]
        1. byte     1바이트    -128~127
        2. short    2바이트    +-3만정도
        3. int      4바이트    +-21억정도 [ *직접 입력한 값 -> 리터럴] - 정수의 기본타입.
        4. long     8바이트    +-21이상 [*리터럴 데이터 뒤에 l,L을 붙여 long타입 임을 알려야함]
                                                -정수 리터럴의 기본 타입은 int 이므로
        -기본 자료형으로 표현이 불가능한 범위는 문자열타입(클래스)사용
    [문자/정수]
        1.char  2바이트    0~65535, 유니코드, ' ' 작은따옴표 사용 , unsigned 사용

    [문자열/참조타입]
        1.String    문자 길이에 따름, 참조클래스, " "큰따옴표 사용, jdk13이상 """ """ 사용 가능
    [실수]
        1.float     4바이트    7자리 유효 [*리터럴 뒤에 F/f를 붙여서 사용함]
        2.double    8바이트    16자리 유효

    [이스케이프/제어문자]
    - \ 백슬래시 뜻함.
    "" : 문자열 형식을 위한 특수문자 / 기능이 들어감 -> 출력 불가능... ㅠㅠ
    '' : 문자 형식을 위한 특수문자 / 기능이 들어감 -> 출력불가능... ㅠㅠ

    -----> 출력하고 싶다...!! ----> \를 사용하자!!!

    - \" : "큰따옴표 문자형식 출력
    - \' : '작은 따옴표 문자형식 출력
    - \n : 줄바꿈 처리
    - \t : 탭 처리
    - \\ : \ 백슬래쉬 문자형식 출력
    - \r : 캐리지 리턴 [ 맨앞으로 커서 이동 ]


